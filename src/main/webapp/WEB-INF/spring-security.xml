<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="authSuccess" class="ru.tsconsulting.requeststatushandler.AuthSuccess"/>
    <bean id="accessDenied" class="ru.tsconsulting.requeststatushandler.AccessDenied"/>
    <bean id="logoutSuccess" class="ru.tsconsulting.requeststatushandler.LogoutSuccess"/>

    <security:global-method-security pre-post-annotations="enabled" />

    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/certificates/**" access="hasAnyRole('ROLE_BOSS','ROLE_ADMIN')"/>
        <security:intercept-url pattern="/positions/**" access="hasAnyRole('ROLE_BOSS','ROLE_ADMIN')"/>
        <security:intercept-url pattern="/grades/**" access="hasAnyRole('ROLE_BOSS','ROLE_ADMIN')"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()" />
        <security:remember-me token-validity-seconds="20"/>
        <security:csrf disabled="true"/>
        <security:logout success-handler-ref="logoutSuccess" delete-cookies="remember-me"/>
        <security:form-login authentication-success-handler-ref="authSuccess"/>
        <security:access-denied-handler ref="accessDenied"/>
        <!--<security:http-basic/>-->
    </security:http>

    <security:jdbc-user-service id="jdbcUserService" data-source-ref="dbDataSource"
        users-by-username-query="SELECT USERNAME, PASSWORD, ENABLED FROM USERS WHERE USERNAME=?"
        authorities-by-username-query="SELECT USERNAME, AUTHORITY FROM USERS JOIN AUTHORITIES ON AUTH_ID=AUTHORITIES.ID
        WHERE USERNAME=?"/>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="jdbcUserService">
            <security:password-encoder hash="sha-256"/>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>